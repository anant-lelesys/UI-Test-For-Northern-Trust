{"ast":null,"code":"var _jsxFileName = \"/opt/local/share/nginx/html/React/hire-test-app/src/index.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport './index.css';\nimport LeftArrow from './leftArrow.jsx';\nimport RightArrow from './rightArrow.jsx'; //The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\n\nclass Pokemon extends Component {\n  render() {\n    const _this$props = this.props,\n          pokemon = _this$props.pokemon,\n          id = _this$props.id;\n    return React.createElement(\"div\", {\n      className: \"pokemon-species-sprite slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pokemon-species-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, pokemon.name), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"ID: \", id)), React.createElement(\"img\", {\n      src: require(\"../public/sprites/\".concat(id, \".png\")),\n      alt: id,\n      width: \"250\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n} //The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goToPrevSlide = () => {\n      if (this.state.currentIndex === this.state.species.length + 1) {\n        return this.setState({\n          currentIndex: 1,\n          translateValue: 1\n        });\n      }\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex - 1,\n        translateValue: prevState.translateValue - -this.slideWidth()\n      }));\n    };\n\n    this.goToNextSlide = () => {\n      if (this.state.currentIndex === this.state.species.length - 1) {\n        return this.setState({\n          currentIndex: 0,\n          translateValue: 0\n        });\n      }\n\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1,\n        translateValue: prevState.translateValue + -this.slideWidth()\n      }));\n    };\n\n    this.slideWidth = () => {\n      return document.querySelector('.slide').clientWidth;\n    };\n\n    this.state = {\n      species: [],\n      fetched: false,\n      loading: false,\n      currentIndex: 0,\n      translateValue: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=3').then(res => res.json()).then(response => {\n      this.setState({\n        species: response.results,\n        loading: true,\n        fetched: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          fetched = _this$state.fetched,\n          loading = _this$state.loading,\n          species = _this$state.species;\n    let content;\n\n    if (fetched) {\n      content = React.createElement(\"div\", {\n        className: \"pokemon-species-list slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider-wrapper\",\n        style: {\n          transform: \"translateX(\".concat(this.state.translateValue, \"px)\"),\n          transition: 'transform ease-out 0.45s'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, species.map((pokemon, index) => React.createElement(Pokemon, {\n        key: pokemon.name,\n        id: index + 1,\n        pokemon: pokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"slide-arrows\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(LeftArrow, {\n        goToPrevSlide: this.goToPrevSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(RightArrow, {\n        goToNextSlide: this.goToNextSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })));\n    } else if (loading && !fetched) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Loading ...\");\n    } else {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, content);\n  }\n\n} //This is the root component\n\n\nclass PokeApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pokeapp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" The PokeMon! \"), React.createElement(PokemonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(PokeApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/opt/local/share/nginx/html/React/hire-test-app/src/index.js"],"names":["render","React","Component","fetch","LeftArrow","RightArrow","Pokemon","props","pokemon","id","name","require","PokemonList","constructor","goToPrevSlide","state","currentIndex","species","length","setState","translateValue","prevState","slideWidth","goToNextSlide","document","querySelector","clientWidth","fetched","loading","componentDidMount","then","res","json","response","results","content","transform","transition","map","index","PokeApp","getElementById"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,WAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB,C,CAGA;AACA;AACA;;AACA,MAAMC,OAAN,SAAsBJ,SAAtB,CAA+B;AAC7BF,EAAAA,MAAM,GAAE;AAAA,wBACe,KAAKO,KADpB;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACSC,EADT,eACSA,EADT;AAEN,WAAO;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,OAAO,CAACE,IAAf,CAAvC,OAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,EAAX,CAAnE,CADD,EAEK;AAAK,MAAA,GAAG,EAAEE,OAAO,6BAAsBF,EAAtB,UAAjB;AAAkD,MAAA,GAAG,EAAEA,EAAvD;AAA2D,MAAA,KAAK,EAAC,KAAjE;AAAuE,MAAA,MAAM,EAAC,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,CAAP;AAIC;;AAP0B,C,CAW/B;AACA;AACA;AACA;;;AAEA,MAAMG,WAAN,SAA0BV,SAA1B,CAAmC;AACjCW,EAAAA,WAAW,CAACN,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAUhBO,aAVgB,GAUA,MAAM;AAClB,UAAG,KAAKC,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,MAAnB,GAA4B,CAA3D,EAA8D;AAC1D,eAAO,KAAKC,QAAL,CAAc;AACnBH,UAAAA,YAAY,EAAE,CADK;AAEnBI,UAAAA,cAAc,EAAE;AAFG,SAAd,CAAP;AAIH;;AACD,WAAKD,QAAL,CAAcE,SAAS,KAAK;AACxBL,QAAAA,YAAY,EAAEK,SAAS,CAACL,YAAV,GAAyB,CADf;AAExBI,QAAAA,cAAc,EAAEC,SAAS,CAACD,cAAV,GAA2B,CAAE,KAAKE,UAAL;AAFrB,OAAL,CAAvB;AAIH,KArBe;;AAAA,SAuBhBC,aAvBgB,GAuBA,MAAM;AAClB,UAAG,KAAKR,KAAL,CAAWC,YAAX,KAA4B,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,MAAnB,GAA4B,CAA3D,EAA8D;AAC1D,eAAO,KAAKC,QAAL,CAAc;AACnBH,UAAAA,YAAY,EAAE,CADK;AAEnBI,UAAAA,cAAc,EAAE;AAFG,SAAd,CAAP;AAIH;;AACD,WAAKD,QAAL,CAAcE,SAAS,KAAK;AACxBL,QAAAA,YAAY,EAAEK,SAAS,CAACL,YAAV,GAAyB,CADf;AAExBI,QAAAA,cAAc,EAAEC,SAAS,CAACD,cAAV,GAA2B,CAAE,KAAKE,UAAL;AAFrB,OAAL,CAAvB;AAIH,KAlCe;;AAAA,SAmChBA,UAnCgB,GAmCH,MAAM;AACf,aAAOE,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,WAAxC;AACF,KArCc;;AAEhB,SAAKX,KAAL,GAAa;AACXE,MAAAA,OAAO,EAAG,EADC;AAEXU,MAAAA,OAAO,EAAG,KAFC;AAGXC,MAAAA,OAAO,EAAG,KAHC;AAIXZ,MAAAA,YAAY,EAAE,CAJH;AAKXI,MAAAA,cAAc,EAAE;AALL,KAAb;AAOD;;AA6BDS,EAAAA,iBAAiB,GAAE;AACjB,SAAKV,QAAL,CAAc;AACZS,MAAAA,OAAO,EAAG;AADE,KAAd;AAGAzB,IAAAA,KAAK,CAAC,0CAAD,CAAL,CAAkD2B,IAAlD,CAAuDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA9D,EACCF,IADD,CACMG,QAAQ,IAAG;AACf,WAAKd,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAGgB,QAAQ,CAACC,OADP;AAEZN,QAAAA,OAAO,EAAG,IAFE;AAGZD,QAAAA,OAAO,EAAG;AAHE,OAAd;AAKD,KAPD;AAQD;;AAED3B,EAAAA,MAAM,GAAE;AAAA,wBAC8B,KAAKe,KADnC;AAAA,UACCY,OADD,eACCA,OADD;AAAA,UACUC,OADV,eACUA,OADV;AAAA,UACmBX,OADnB,eACmBA,OADnB;AAEN,QAAIkB,OAAJ;;AACA,QAAIR,OAAJ,EAAa;AACXQ,MAAAA,OAAO,GACL;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AACvCC,UAAAA,SAAS,uBAAgB,KAAKrB,KAAL,CAAWK,cAA3B,QAD8B;AAEvCiB,UAAAA,UAAU,EAAE;AAF2B,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGpB,OAAO,CAACqB,GAAR,CAAY,CAAC9B,OAAD,EAAS+B,KAAT,KAAiB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAE/B,OAAO,CAACE,IAAtB;AAA4B,QAAA,EAAE,EAAE6B,KAAK,GAAC,CAAtC;AAAyC,QAAA,OAAO,EAAE/B,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAJH,CADJ,EAOE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACE,QAAA,aAAa,EAAE,KAAKM,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAIM,oBAAC,UAAD;AACI,QAAA,aAAa,EAAE,KAAKS,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,CAPF,CADF;AAiBD,KAlBD,MAkBO,IAAIK,OAAO,IAAI,CAACD,OAAhB,EAAwB;AAC3BQ,MAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAV;AACH,KAFM,MAGF;AACHA,MAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLA,OADK,CAAR;AAGD;;AAnFgC,C,CAuFnC;;;AACA,MAAMK,OAAN,SAAsBtC,SAAtB,CAA+B;AAC7BF,EAAAA,MAAM,GAAE;AACN,WAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADK,EAEL,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AAN4B;;AAS/BA,MAAM,CAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAYwB,QAAQ,CAACiB,cAAT,CAAwB,MAAxB,CAAZ,CAAN","sourcesContent":["import {render} from 'react-dom';\nimport React, {Component} from 'react';\nimport fetch from 'isomorphic-fetch';\nimport './index.css'\nimport LeftArrow from './leftArrow.jsx'\nimport RightArrow from './rightArrow.jsx'\n\n\n//The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\nclass Pokemon extends Component{\n  render(){\n    const {pokemon,id} = this.props;\n    return <div className=\"pokemon-species-sprite slide\">\n            <div className=\"pokemon-species-name\"> <span>{pokemon.name}</span> <span>ID: {id}</span></div>\n                <img src={require(`../public/sprites/${id}.png`)} alt={id} width=\"250\" height=\"250\" />\n            </div>;\n    }\n}\n\n\n//The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\nclass PokemonList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      species : [],\n      fetched : false,\n      loading : false,\n      currentIndex: 0,\n      translateValue: 0\n    };\n  }\n    goToPrevSlide = () => {\n        if(this.state.currentIndex === this.state.species.length + 1) {\n            return this.setState({\n              currentIndex: 1,\n              translateValue: 1\n            })\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex - 1,\n            translateValue: prevState.translateValue - -(this.slideWidth())\n        }));\n    }\n\n    goToNextSlide = () => {\n        if(this.state.currentIndex === this.state.species.length - 1) {\n            return this.setState({\n              currentIndex: 0,\n              translateValue: 0\n            })\n        }\n        this.setState(prevState => ({\n            currentIndex: prevState.currentIndex + 1,\n            translateValue: prevState.translateValue + -(this.slideWidth())\n        }));\n    }\n    slideWidth = () => {\n        return document.querySelector('.slide').clientWidth\n     }\n  componentDidMount(){\n    this.setState({\n      loading : true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=3').then(res => res.json())\n    .then(response=> {\n      this.setState({\n        species : response.results,\n        loading : true,\n        fetched : true\n      });\n    });\n  }\n\n  render(){\n    const {fetched, loading, species} = this.state;\n    let content ;\n    if (fetched) {\n      content = \n        <div className=\"pokemon-species-list slider\">\n            <div className=\"slider-wrapper\" style={{\n            transform: `translateX(${this.state.translateValue}px)`,\n            transition: 'transform ease-out 0.45s'\n          }}>\n              {species.map((pokemon,index)=><Pokemon key={pokemon.name} id={index+1} pokemon={pokemon}/>)}\n            </div>\n          <div className=\"slide-arrows\">\n              <LeftArrow \n                goToPrevSlide={this.goToPrevSlide}\n                />\n                <RightArrow \n                    goToNextSlide={this.goToNextSlide}    \n                />\n            </div>\n        </div>;\n    } else if (loading && !fetched){\n        content = <p> Loading ...</p>;\n    }\n    else {\n      content = <div/>;\n    }\n    return  <div>\n      {content}\n    </div>;\n  }\n}\n\n\n//This is the root component\nclass PokeApp extends Component{\n  render(){\n    return <div className=\"pokeapp\">\n      <h1> The PokeMon! </h1>\n      <PokemonList/>\n    </div>;\n  }\n}\n\nrender(<PokeApp/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}