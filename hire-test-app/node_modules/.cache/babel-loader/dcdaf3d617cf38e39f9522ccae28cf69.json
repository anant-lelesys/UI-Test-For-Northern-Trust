{"ast":null,"code":"var _jsxFileName = \"/opt/local/share/nginx/html/React/hire-test-app/src/index.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport Slider from \"react-slick\";\nimport fetch from 'isomorphic-fetch';\nimport './index.css';\nimport LeftArrow from './leftArrow.jsx';\nimport RightArrow from './rightArrow.jsx';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"; //The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\n\nclass Pokemon extends Component {\n  render() {\n    const _this$props = this.props,\n          pokemon = _this$props.pokemon,\n          id = _this$props.id;\n    return React.createElement(\"div\", {\n      className: \"pokemon-species-sprite slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pokemon-species-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, pokemon.name), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"ID: \", id)), React.createElement(\"img\", {\n      src: require(\"../public/sprites/\".concat(id, \".png\")),\n      alt: id,\n      width: \"250\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n} //The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      species: [],\n      fetched: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=15').then(res => res.json()).then(response => {\n      this.setState({\n        species: response.results,\n        loading: true,\n        fetched: true\n      });\n    });\n  }\n\n  render() {\n    var settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    const _this$state = this.state,\n          fetched = _this$state.fetched,\n          loading = _this$state.loading,\n          species = _this$state.species;\n    let content;\n\n    if (fetched) {\n      content = React.createElement(\"div\", {\n        className: \"pokemon-species-list slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), species.map((pokemon, index) => React.createElement(Pokemon, {\n        key: pokemon.name,\n        id: index + 1,\n        pokemon: pokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"slide-arrows\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(LeftArrow, {\n        goToPrevSlide: this.goToPrevSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(RightArrow, {\n        goToNextSlide: this.goToNextSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })));\n    } else if (loading && !fetched) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Loading ...\");\n    } else {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, content);\n  }\n\n} //This is the root component\n\n\nclass PokeApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pokeapp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" The PokeMon! \"), React.createElement(PokemonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(PokeApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/opt/local/share/nginx/html/React/hire-test-app/src/index.js"],"names":["render","React","Component","Slider","fetch","LeftArrow","RightArrow","Pokemon","props","pokemon","id","name","require","PokemonList","constructor","state","species","fetched","loading","componentDidMount","setState","then","res","json","response","results","settings","dots","infinite","speed","slidesToShow","slidesToScroll","content","map","index","goToPrevSlide","goToNextSlide","PokeApp","document","getElementById"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,WAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP,C,CAGA;AACA;AACA;;AACA,MAAMC,OAAN,SAAsBL,SAAtB,CAA+B;AAC7BF,EAAAA,MAAM,GAAE;AAAA,wBACe,KAAKQ,KADpB;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACSC,EADT,eACSA,EADT;AAEN,WAAO;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,OAAO,CAACE,IAAf,CAAvC,OAAmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,EAAX,CAAnE,CADD,EAEK;AAAK,MAAA,GAAG,EAAEE,OAAO,6BAAsBF,EAAtB,UAAjB;AAAkD,MAAA,GAAG,EAAEA,EAAvD;AAA2D,MAAA,KAAK,EAAC,KAAjE;AAAuE,MAAA,MAAM,EAAC,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,CAAP;AAIC;;AAP0B,C,CAW/B;AACA;AACA;AACA;;;AAEA,MAAMG,WAAN,SAA0BX,SAA1B,CAAmC;AACjCY,EAAAA,WAAW,CAACN,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKO,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAG,EADC;AAEXC,MAAAA,OAAO,EAAG,KAFC;AAGXC,MAAAA,OAAO,EAAG;AAHC,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AACZF,MAAAA,OAAO,EAAG;AADE,KAAd;AAGAd,IAAAA,KAAK,CAAC,2CAAD,CAAL,CAAmDiB,IAAnD,CAAwDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA/D,EACCF,IADD,CACMG,QAAQ,IAAG;AACf,WAAKJ,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAGQ,QAAQ,CAACC,OADP;AAEZP,QAAAA,OAAO,EAAG,IAFE;AAGZD,QAAAA,OAAO,EAAG;AAHE,OAAd;AAKD,KAPD;AAQD;;AAEDjB,EAAAA,MAAM,GAAE;AACN,QAAI0B,QAAQ,GAAG;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,KAAK,EAAE,GAHI;AAIXC,MAAAA,YAAY,EAAE,CAJH;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAf;AADM,wBAQ8B,KAAKhB,KARnC;AAAA,UAQCE,OARD,eAQCA,OARD;AAAA,UAQUC,OARV,eAQUA,OARV;AAAA,UAQmBF,OARnB,eAQmBA,OARnB;AASN,QAAIgB,OAAJ;;AACA,QAAIf,OAAJ,EAAa;AACXe,MAAAA,OAAO,GACL;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD,oBAAYN,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuBV,OAAO,CAACiB,GAAR,CAAY,CAACxB,OAAD,EAASyB,KAAT,KAAiB,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEzB,OAAO,CAACE,IAAtB;AAA4B,QAAA,EAAE,EAAEuB,KAAK,GAAC,CAAtC;AAAyC,QAAA,OAAO,EAAEzB,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,CAAvB,CADA,CADJ,EAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACE,QAAA,aAAa,EAAE,KAAK0B,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAIM,oBAAC,UAAD;AACI,QAAA,aAAa,EAAE,KAAKC,aADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,CAJF,CADF;AAcD,KAfD,MAeO,IAAIlB,OAAO,IAAI,CAACD,OAAhB,EAAwB;AAC3Be,MAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAV;AACH,KAFM,MAGF;AACHA,MAAAA,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACD;;AACD,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACLA,OADK,CAAR;AAGD;;AAzDgC,C,CA6DnC;;;AACA,MAAMK,OAAN,SAAsBnC,SAAtB,CAA+B;AAC7BF,EAAAA,MAAM,GAAE;AACN,WAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADK,EAEL,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,CAAP;AAID;;AAN4B;;AAS/BA,MAAM,CAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAYsC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAZ,CAAN","sourcesContent":["import {render} from 'react-dom';\nimport React, {Component} from 'react';\nimport Slider from \"react-slick\";\nimport fetch from 'isomorphic-fetch';\nimport './index.css';\nimport LeftArrow from './leftArrow.jsx';\nimport RightArrow from './rightArrow.jsx';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n\n//The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\nclass Pokemon extends Component{\n  render(){\n    const {pokemon,id} = this.props;\n    return <div className=\"pokemon-species-sprite slide\">\n            <div className=\"pokemon-species-name\"> <span>{pokemon.name}</span> <span>ID: {id}</span></div>\n                <img src={require(`../public/sprites/${id}.png`)} alt={id} width=\"250\" height=\"250\" />\n            </div>;\n    }\n}\n\n\n//The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\nclass PokemonList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      species : [],\n      fetched : false,\n      loading : false,\n    };\n  }\n  componentDidMount(){\n    this.setState({\n      loading : true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=15').then(res => res.json())\n    .then(response=> {\n      this.setState({\n        species : response.results,\n        loading : true,\n        fetched : true\n      });\n    });\n  }\n\n  render(){\n    var settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      };\n    const {fetched, loading, species} = this.state;\n    let content ;\n    if (fetched) {\n      content = \n        <div className=\"pokemon-species-list slider\">\n            <div className=\"slider-wrapper\">\n            <Slider {...settings}>{species.map((pokemon,index)=><Pokemon key={pokemon.name} id={index+1} pokemon={pokemon}/>)}</Slider>\n            </div>\n          <div className=\"slide-arrows\">\n              <LeftArrow \n                goToPrevSlide={this.goToPrevSlide}\n                />\n                <RightArrow \n                    goToNextSlide={this.goToNextSlide}    \n                />\n            </div>\n        </div>;\n    } else if (loading && !fetched){\n        content = <p> Loading ...</p>;\n    }\n    else {\n      content = <div/>;\n    }\n    return  <div>\n      {content}\n    </div>;\n  }\n}\n\n\n//This is the root component\nclass PokeApp extends Component{\n  render(){\n    return <div className=\"pokeapp\">\n      <h1> The PokeMon! </h1>\n      <PokemonList/>\n    </div>;\n  }\n}\n\nrender(<PokeApp/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}