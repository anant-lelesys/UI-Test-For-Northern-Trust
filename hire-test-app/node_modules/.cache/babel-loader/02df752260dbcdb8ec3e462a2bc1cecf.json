{"ast":null,"code":"var _jsxFileName = \"/opt/local/share/nginx/html/React/hire-test-app/src/index.js\";\nimport { render } from 'react-dom';\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-fetch';\nimport './index.css';\nimport LeftArrow from '../left-arrow';\nimport RightArrow from '../right-arrow'; //The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\n\nclass Pokemon extends Component {\n  render() {\n    const _this$props = this.props,\n          pokemon = _this$props.pokemon,\n          id = _this$props.id;\n    return React.createElement(\"div\", {\n      className: \"pokemon-species-sprite slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pokemon-species-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, pokemon.name), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"ID: \", id)), React.createElement(\"img\", {\n      src: require(\"../public/sprites/\".concat(id, \".png\")),\n      alt: id,\n      width: \"250\",\n      height: \"250\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }));\n  }\n\n} //The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\n\nclass PokemonList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goToPrevSlide = () => {};\n\n    this.goToNextSlide = () => {};\n\n    this.state = {\n      species: [],\n      fetched: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=15').then(res => res.json()).then(response => {\n      this.setState({\n        species: response.results,\n        loading: true,\n        fetched: true\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          fetched = _this$state.fetched,\n          loading = _this$state.loading,\n          species = _this$state.species;\n    let content;\n\n    if (fetched) {\n      content = React.createElement(\"div\", {\n        className: \"pokemon-species-list slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, species.map((pokemon, index) => React.createElement(Pokemon, {\n        key: pokemon.name,\n        id: index + 1,\n        pokemon: pokemon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(LeftArrow, {\n        goToPrevSlide: this.goToPrevSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(RightArrow, {\n        goToNextSlide: this.goToNextSlide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    } else if (loading && !fetched) {\n      content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \" Loading ...\");\n    } else {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, content);\n  }\n\n} //This is the root component\n\n\nclass PokeApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pokeapp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" The PokeMon! \"), React.createElement(PokemonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }));\n  }\n\n}\n\nrender(React.createElement(PokeApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/opt/local/share/nginx/html/React/hire-test-app/src/index.js"],"names":["render","React","Component","fetch","LeftArrow","RightArrow","Pokemon","props","pokemon","id","name","require","PokemonList","constructor","goToPrevSlide","goToNextSlide","state","species","fetched","loading","componentDidMount","setState","then","res","json","response","results","content","map","index","PokeApp","document","getElementById"],"mappings":"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","sourcesContent":["import {render} from 'react-dom';\nimport React, {Component} from 'react';\nimport fetch from 'isomorphic-fetch';\nimport './index.css'\nimport LeftArrow from '../left-arrow'\nimport RightArrow from '../right-arrow'\n\n\n//The Pokemon component will show an individual pokemon monster\n// It shows an image of the pokemon and\n// shows the name of it as well.\nclass Pokemon extends Component{\n  render(){\n    const {pokemon,id} = this.props;\n    return <div className=\"pokemon-species-sprite slider\">\n            <div className=\"pokemon-species-name\"> <span>{pokemon.name}</span> <span>ID: {id}</span></div>\n                <img src={require(`../public/sprites/${id}.png`)} alt={id} width=\"250\" height=\"250\" />\n            </div>;\n    }\n}\n\n\n//The PokemonList component shows nothing when it mounts for the first time.\n//But right before it mounts on to the DOM, it makes an\n//API call to fetch the first 151 pokemon from the api and\n//then displays them using the Pokemon Component\n\nclass PokemonList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      species : [],\n      fetched : false,\n      loading : false,\n    };\n  }\n    goToPrevSlide = () => {\n\n    }\n\n    goToNextSlide = () => {\n    \n    }\n  componentDidMount(){\n    this.setState({\n      loading : true\n    });\n    fetch('http://pokeapi.co/api/v2/pokemon?limit=15').then(res => res.json())\n    .then(response=> {\n      this.setState({\n        species : response.results,\n        loading : true,\n        fetched : true\n      });\n    });\n  }\n\n  render(){\n    const {fetched, loading, species} = this.state;\n    let content ;\n    if (fetched) {\n      content = \n        <div className=\"pokemon-species-list slider\">\n          {species.map((pokemon,index)=><Pokemon key={pokemon.name} id={index+1} pokemon={pokemon}/>)}\n          <LeftArrow \n            goToPrevSlide={this.goToPrevSlide}\n            />\n          <RightArrow \n                goToNextSlide={this.goToNextSlide}    \n            />\n        </div>;\n    } else if (loading && !fetched){\n        content = <p> Loading ...</p>;\n    }\n    else {\n      content = <div/>;\n    }\n    return  <div>\n      {content}\n    </div>;\n  }\n}\n\n\n//This is the root component\nclass PokeApp extends Component{\n  render(){\n    return <div className=\"pokeapp\">\n      <h1> The PokeMon! </h1>\n      <PokemonList/>\n    </div>;\n  }\n}\n\nrender(<PokeApp/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}